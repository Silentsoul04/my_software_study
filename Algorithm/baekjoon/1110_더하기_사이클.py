#0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다. 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여
#두 자리 수로 만들고, 각 자리의 숫자를 더한다. 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를
#이어 붙이면 새로운 수를 만들 수 있다. 다음 예를 보자.
#26부터 시작한다. 2+6=8이다. 새로운 수는 68이다. 6+8=14이다. 새로운 수는 84이다. 8+4 = 12이다. 새로운 수는 42이다.
#4+2=6이다. 새로운 수는 26이다.
#위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.
#N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.

#1. 숫자 하나를 받는데 10보다 작으면 10 더한다.
#num=int(input(''))
#if 10> num:
#    num = num + 10
#2. 얘를 각 자리 수를 더한다.
#new = num//10+num%10
#3. new 얘를 첫째 자리에 넣는다.
#new = (num%10)*10+new
#4. 이 수와 num이랑 같으면 사이클 출력한다.
#5. 사이클 횟수를 알아낸다. while을 쓰도록 하자.
num = int(input(''))
origin = num
new = 10000
cy = 0
while origin != new:
    cy += 1
    new = num//10 + num%10
    new = (num%10)*10+new%10
    num = new
print(cy)

#더 간단하게 할 수 있는 방법
#while 문에서 쓸데없이 new가 2번 있다.
#저 new를 밑에 new에다가 집어넣으면 한줄로 표현이 가능하다.
#new = (num%10)*10+(num//10 + num%10)%10 이렇게




    
